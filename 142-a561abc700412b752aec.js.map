{"version":3,"file":"142-a561abc700412b752aec.js","mappings":"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","sources":["webpack://portfolio/./node_modules/@mui/icons-material/RemoveCircleOutline.js","webpack://portfolio/./src/components/LooperCallout.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'RemoveCircleOutline');\n\nexports.default = _default;","import React, { memo } from \"react\";\nimport { AppContext } from \"../context/AppContext\";\nimport * as Tone from \"tone\";\nimport { Button, Grid, IconButton, Popover } from \"@mui/material\";\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\nimport useDevHook, { ReactHook } from \"../hooks/UseDevHook\";\n\ninterface ILooperCallout {\n\topen: boolean;\n\tanchor: any;\n\tcloseCallout();\n}\n\nlet LooperCallout: React.FunctionComponent<ILooperCallout> = (props): JSX.Element => {\n\tconst { open, anchor, closeCallout } = props;\n\n\tconst env: string = process.env.GATSBY_ENV;\n\n\tconst { Player, PlayerTimestamp, SetPlayerTimestamp, TempoLevel, SelectedAudio } = React.useContext(AppContext);\n\n\tconst [startLoopEnabled, setStartLoopEnabled] = useDevHook<boolean>(true, \"startLoopEnabled\", ReactHook.State, env);\n\tconst [endLoopEnabled, setEndLoopEnabled] = useDevHook<boolean>(true, \"endLoopEnabled\", ReactHook.State, env);\n\tconst [startLoopTime, setStartLoopTime] = useDevHook<number>(null, \"startLoopTime\", ReactHook.State, env);\n\tconst [endLoopTime, setEndLoopTime] = useDevHook<number>(null, \"endLoopTime\", ReactHook.State, env);\n\n\tReact.useEffect(() => {\n\t\tif (!startLoopEnabled && !endLoopEnabled) {\n\t\t\tloadLoop();\n\t\t}\n\t}, [startLoopEnabled, endLoopEnabled]);\n\n\tconst loadLoop = async (): Promise<void> => {\n\t\tTone.Transport.cancel();\n\n\t\tif (SelectedAudio.Stems.length > 0) {\n\t\t\tSelectedAudio.Stems.forEach((stem) => {\n\t\t\t\tPlayer.current.player(stem.Name).unsync();\n\t\t\t\tPlayer.current.player(stem.Name).dispose();\n\t\t\t});\n\n\t\t\tconst initialURLs = SelectedAudio.Stems.reduce((acc, stem) => {\n\t\t\t\tconst name: string = stem[\"Name\"];\n\t\t\t\tacc[name] = stem[\"Path\"];\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\n\t\t\tPlayer.current = new Tone.Players({\n\t\t\t\turls: initialURLs,\n\t\t\t\tonload: async () => {\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\tSelectedAudio.Stems.map(async (stem) => {\n\t\t\t\t\t\t\tconst stemMuted: boolean = stem.Channel.muted;\n\t\t\t\t\t\t\tconst tempChannel = new Tone.Channel().toDestination();\n\t\t\t\t\t\t\tstem.Channel = tempChannel;\n\t\t\t\t\t\t\tPlayer.current.player(stem.Name).connect(tempChannel);\n\t\t\t\t\t\t\tPlayer.current.player(stem.Name).reverse = SelectedAudio.Reversed;\n\t\t\t\t\t\t\tPlayer.current.player(stem.Name).playbackRate = TempoLevel;\n\t\t\t\t\t\t\tPlayer.current.player(stem.Name).volume.value = stem.Volume;\n\t\t\t\t\t\t\tPlayer.current.player(stem.Name).mute = stemMuted;\n\t\t\t\t\t\t\tPlayer.current.player(stem.Name).sync();\n\t\t\t\t\t\t\tPlayer.current.player(stem.Name).start(0);\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\n\t\t\t\t\tTone.Transport.loop = true;\n\t\t\t\t\tTone.Transport.loopStart = startLoopTime;\n\t\t\t\t\tTone.Transport.loopEnd = endLoopTime;\n\t\t\t\t\tTone.Transport.start();\n\t\t\t\t}\n\t\t\t}).toDestination();\n\t\t} else {\n\t\t\tPlayer.current.unsync();\n\t\t\tPlayer.current = new Tone.Player();\n\n\t\t\tawait Player.current.load(SelectedAudio.Path);\n\n\t\t\tPlayer.current.reverse = SelectedAudio.Reversed;\n\t\t\tPlayer.current.playbackRate = TempoLevel;\n\t\t\tPlayer.current.toDestination().sync().start(0);\n\n\t\t\tTone.Transport.loop = true;\n\t\t\tTone.Transport.loopStart = startLoopTime;\n\t\t\tTone.Transport.loopEnd = endLoopTime;\n\t\t\tTone.Transport.start();\n\t\t}\n\t};\n\n\tconst cancelLoop = (): void => {\n\t\tTone.Transport.loop = false;\n\t\tTone.Transport.seconds = endLoopTime;\n\n\t\tconst currentTimestampEventId: number = Tone.Transport.scheduleRepeat(\n\t\t\t() => {\n\t\t\t\tSetPlayerTimestamp(Tone.TransportTime().toSeconds());\n\t\t\t},\n\t\t\t1,\n\t\t\tendLoopTime,\n\t\t\tSelectedAudio.Duration - endLoopTime\n\t\t);\n\n\t\tTone.Transport.start();\n\n\t\tsetEndLoopTime(null);\n\t\tsetStartLoopTime(null);\n\t\tsetStartLoopEnabled(true);\n\t\tsetEndLoopEnabled(true);\n\t};\n\n\tconst downloadLoop = async (): Promise<void> => {\n\t\tconst recorder = new Tone.Recorder({\n\t\t\tmimeType: \"audio/webm\"\n\t\t});\n\n\t\tPlayer.current.connect(recorder);\n\t\trecorder.start();\n\n\t\tawait setTimeout(async () => {\n\t\t\tconst tempBlob: Blob = await recorder.stop();\n\t\t\tconst url = URL.createObjectURL(tempBlob);\n\t\t\tconst anchor = document.createElement(\"a\");\n\t\t\tanchor.download = \"recording.webm\";\n\t\t\tanchor.href = url;\n\t\t\tanchor.click();\n\t\t}, 4000);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Popover\n\t\t\t\topen={open}\n\t\t\t\tanchorEl={anchor}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"left\"\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\thorizontal: \"right\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tpadding: \"1em\",\n\t\t\t\t\t\tverticalAlign: \"center\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: \"0\",\n\t\t\t\t\t\t\tleft: \"0\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor={\"primary\"}\n\t\t\t\t\t\t\tdisabled={startLoopEnabled || endLoopEnabled}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tcancelLoop();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<RemoveCircleOutlineIcon></RemoveCircleOutlineIcon>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor={\"primary\"}\n\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tdownloadLoop();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FileDownloadIcon></FileDownloadIcon>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: \"0\",\n\t\t\t\t\t\t\tright: \"0\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tcloseCallout();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor={\"primary\"}\n\t\t\t\t\t\t\tstyle={{ backgroundColor: \"transparent\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CloseIcon></CloseIcon>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Grid container spacing={1} padding={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tdisabled={!startLoopEnabled || Tone.Transport.state !== \"started\"}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tTone.Transport.loopStart = PlayerTimestamp;\n\t\t\t\t\t\t\t\tsetStartLoopTime(PlayerTimestamp);\n\t\t\t\t\t\t\t\tsetStartLoopEnabled(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{ minWidth: \"6em\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tStart\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tdisabled={!endLoopEnabled || Tone.Transport.state !== \"started\"}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tTone.Transport.loopEnd = PlayerTimestamp;\n\t\t\t\t\t\t\t\tsetEndLoopTime(PlayerTimestamp);\n\t\t\t\t\t\t\t\tsetEndLoopEnabled(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{ minWidth: \"6em\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEnd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Popover>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default LooperCallout;\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","props","open","anchor","closeCallout","env","process","Player","PlayerTimestamp","SetPlayerTimestamp","TempoLevel","SelectedAudio","React","AppContext","startLoopEnabled","setStartLoopEnabled","useDevHook","ReactHook","endLoopEnabled","setEndLoopEnabled","startLoopTime","setStartLoopTime","endLoopTime","setEndLoopTime","loadLoop","async","Tone","Stems","length","forEach","stem","current","player","Name","unsync","dispose","initialURLs","reduce","acc","urls","onload","Promise","all","map","stemMuted","Channel","muted","tempChannel","toDestination","connect","reverse","Reversed","playbackRate","volume","value","Volume","mute","sync","start","load","Path","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","style","position","padding","verticalAlign","top","left","IconButton","color","disabled","onClick","toSeconds","Duration","RemoveCircleOutlineIcon","recorder","mimeType","setTimeout","tempBlob","stop","url","URL","createObjectURL","document","createElement","download","href","click","downloadLoop","FileDownloadIcon","right","backgroundColor","CloseIcon","Grid","container","spacing","item","Button","variant","minWidth"],"sourceRoot":""}